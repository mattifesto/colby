/**
 * This file is used to give all platforms and browsers an equal base for css.
 * If there is anything very basic that's different among platforms or browsers
 * then rules should be added to this file to equalize and make the experience
 * the same for all browsers and platforms.
 *
 * Things that commonly change from theme to theme should not be placed in this
 * file.
 *
 */

*
{
    margin: 0px;
    padding: 0px;
}

html
{
    /**
     ** these two styles are very important
     ** they set the default behavior for absolutely positioned elements
     ** these elements will be positioned relative to the whole html page
     ** if not for these styles
     ** these elements would be positioned relative to the viewport
     **   (the viewport is the html element's parent)
     ** this will not affect elements inside a relatively positioned child
     **/

    position: relative;
    min-height: 100%;

    /**
     ** optimizeLegibility might eventually be on by default
     ** keep an eye on it
     **/

    text-rendering: optimizeLegibility;
}

html
{
    font-size: 16px;
    overflow-y: scroll;
}

/**
 * 2013.05.20
 *
 * The `main` element is supported in newer browsers but is not yet a `block`
 * element by default. Remove this rule as soon as new browsers define it as
 * a `block` element in the default stylesheet.
 *
 * As of this writing, neither Safari nor Firefox do this.
 */

main
{
    display: block;
}

a:link,
a:active,
a:focus,
a:hover
{
    outline: none;
}

a img
{
    border: none;
}

pre
{
    overflow: auto;
}

/* 2012.06.25
 * added 'input[type=file]' to the list however I'm thinking that
 * all input elements should be included
 * I'm going to be conservative today and not change it
 * but consider it in the future, there should be a definitive answer
 *
 * 2012.10.27
 * changed input[type=text] and input[type=file] to just input
 * I'm leaving this comment in just in case something goes wrong
 * also added the button and select elements
 */

button,
input,
select,
textarea
{
    box-sizing: border-box;
    font-family: inherit;
    font-size: inherit;
    outline: none;
}

td,
th
{
    text-align: left;
    vertical-align: baseline;
}

/*
 * Horizontal lists are used on almost every website and the elements and
 * styles used are always the same so it makes sense to have them here.
 *
 * 2013.01.14
 *  Switched from a left margin of 1.5em on `ul.horizontal > li + li` to
 *  0.75em left _and_ right margins on `ul.horizontal > li`. This will make
 *  horizontal list items will look pleasantly spaced inside an element that
 *  doesn't have padding of its own. Previously it had been assumed the
 *  containing element would have the padding required to make the horizontal
 *  list look good, but that was a bad assumption.
 *
 *  This also means that the list will not be aligned to the left edge of the
 *  containing element which has never been a requirement of any previous
 *  scenario.
 */

ul.horizontal
{
    padding-left: 0px;
}

ul.horizontal > li
{
    display: inline;
    margin-left: 0.75em;
    margin-right: 0.75em;
}
