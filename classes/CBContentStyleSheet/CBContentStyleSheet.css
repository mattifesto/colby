.CBContentStyleSheet {
    /**
     * 2018_09_12 This will allow long words like IDs and URLs to wrap of they
     * take up more than one line of width. Child pre elementsunset this rule
     * below.
     */
    overflow-wrap: break-word;
}



/**
 * 2020_08_16
 *
 *      We remove all margins by default in CBEqualizePageSettingsPart.css. But
 *      in this style sheet we want to add the default header margins back in.
 *      However, if you look at the user agent style sheets they take actions
 *      that are very complex with regard to margins.
 *
 *      Our goals here are to:
 *
 *          Mostly use default header styles and margins.
 *
 *          Reduce the h1 and h2 font sizes (and margins) because in this
 *          context 2.0em is too large for an h1.
 *
 *          Stop the reduction of the h1 font-size when inside section elements.
 *
 *      As Colby ages, these styles will improve, but there is some concern over
 *      the complexity of simply setting font sizes and margins. As we
 *      understand these complexities Colby will make better decisions.
 */

.CBContentStyleSheet h1 {
    font-size: 1.5em;
    margin-top: 0.83em;
    margin-bottom: 0.83em;
}

.CBContentStyleSheet h2 {
    font-size: 1.35em;
    margin-top: 0.90em;
    margin-bottom: 0.90em;
}

.CBContentStyleSheet h3 {
    margin: revert;
}

.CBContentStyleSheet h4 {
    margin: revert;
}

.CBContentStyleSheet h5 {
    margin: revert;
}

.CBContentStyleSheet h6 {
    margin: revert;
}


.CBContentStyleSheet blockquote {
    margin: 2em 3em;
}

.CBContentStyleSheet cite {
    font-style: italic;
}



/**
 * 2020_08_16
 *
 *      Dictionary lists, ordered lists, and unordered lists have slightly
 *      compressed vertical margins.
 */
.CBContentStyleSheet dd,
.CBContentStyleSheet dt,
.CBContentStyleSheet li {
    margin-bottom: 1em;
    margin-top: 1em;
}



.CBContentStyleSheet dd p,
.CBContentStyleSheet dt p,
.CBContentStyleSheet li p {
    margin-bottom: 0.5em;
    margin-top: 0.5em;
}



.CBContentStyleSheet dt {
    font-weight: bold;
}



.CBContentStyleSheet dt + dd {
    margin-top: -0.5em;
}



.CBContentStyleSheet dd + dt {
    margin-top: 2em;
}



.CBContentStyleSheet dd {
    color: var(--CBTextColor2);
}



.CBContentStyleSheet hr {
    border-style: none;
    border-top: 0.1em solid var(--CBTextColor3);
    margin: 3em 8em !important;
}



.CBContentStyleSheet b cite,
.CBContentStyleSheet b i,
.CBContentStyleSheet cite b,
.CBContentStyleSheet cite i,
.CBContentStyleSheet i b,
.CBContentStyleSheet i cite {
    font-style: inherit;
    font-weight: inherit;
}



/**
 * @NOTE 2019_02_19
 *
 *      The vertical margins have been changed for <dl>, <ol>, <pre>, and <ul>
 *      elements that represents a change in perspective.
 *
 *      Previously, there had been attempts not to apply a top margin if the
 *      element was a first child, and not to apply a bottom margin if the
 *      element was a last child.
 *
 *      While this kind of made sense if the element was the very first or last
 *      child, it didn't really make sense elsewhere. No top and bottom margins
 *      are generally displayed for any element that has them at all times.
 */
.CBContentStyleSheet dl,
.CBContentStyleSheet ol,
.CBContentStyleSheet pre,
.CBContentStyleSheet ul {
    margin-bottom: 1.5em;
    margin-top: 1.5em;
}



.CBContentStyleSheet p {
    margin: revert;
}



.CBContentStyleSheet pre {
    overflow-wrap: normal; /* unset inherited value */
    overflow-x: auto;
}

.CBContentStyleSheet pre.green {
    background-color: hsl(0, 0%, 15%);
    border-radius: 10px;
    color: hsl(120, 80%, 45%);
    line-height: 1.4;
    padding: 10px 15px;
}

.CBContentStyleSheet.center,
.CBContentStyleSheet .center {
    text-align: center;
}

.CBContentStyleSheet.justify,
.CBContentStyleSheet .justify {
    text-align: justify;
}

.CBContentStyleSheet.left,
.CBContentStyleSheet .left {
    text-align: left;
}

.CBContentStyleSheet .prewrap {
    white-space: pre-wrap;
}

.CBContentStyleSheet .preline {
    white-space: pre-line;
}

.CBContentStyleSheet.right,
.CBContentStyleSheet .right {
    text-align: right;
}
